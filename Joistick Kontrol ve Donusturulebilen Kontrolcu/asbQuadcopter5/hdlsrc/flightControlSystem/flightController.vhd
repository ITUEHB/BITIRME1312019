-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\flightControlSystem\flightController.vhd
-- Created: 2019-01-13 13:16:31
-- 
-- Generated by MATLAB 9.5 and HDL Coder 3.13
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 0.005
-- Target subsystem base rate: 0.005
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        0.005
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- motors_refout                 ce_out        0.005
-- pose_refout                   ce_out        0.005
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: flightController
-- Source Path: flightController
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.flightController_pkg.ALL;

ENTITY flightController IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        ReferenceValueServerBus_controlModePosVSOrient :   IN    std_logic;
        ReferenceValueServerBus_pos_ref   :   IN    vector_of_std_logic_vector32(0 TO 2);  -- single [3]
        ReferenceValueServerBus_takeoff_flag :   IN    std_logic;
        ReferenceValueServerBus_orient_ref :   IN    vector_of_std_logic_vector32(0 TO 2);  -- single [3]
        ReferenceValueServerBus_live_time_ticks :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        states_estim_X                    :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        states_estim_Y                    :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        states_estim_Z                    :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        states_estim_yaw                  :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        states_estim_pitch                :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        states_estim_roll                 :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        states_estim_dx                   :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        states_estim_dy                   :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        states_estim_dz                   :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        states_estim_p                    :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        states_estim_q                    :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        states_estim_r                    :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        ce_out                            :   OUT   std_logic;
        motors_refout                     :   OUT   vector_of_std_logic_vector32(0 TO 3);  -- single [4]
        pose_refout                       :   OUT   vector_of_std_logic_vector32(0 TO 7)  -- single [8]
        );
END flightController;


ARCHITECTURE rtl OF flightController IS

  -- Component Declarations
  COMPONENT Flight_Controller
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          ReferenceValueServerBus_Inport_1_controlModePosVSOrient :   IN    std_logic;
          ReferenceValueServerBus_Inport_1_pos_ref :   IN    vector_of_std_logic_vector32(0 TO 2);  -- single [3]
          ReferenceValueServerBus_Inport_1_takeoff_flag :   IN    std_logic;
          ReferenceValueServerBus_Inport_1_orient_ref :   IN    vector_of_std_logic_vector32(0 TO 2);  -- single [3]
          ReferenceValueServerBus_Inport_1_live_time_ticks :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          states_estim_X                  :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          states_estim_Y                  :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          states_estim_Z                  :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          states_estim_yaw                :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          states_estim_pitch              :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          states_estim_roll               :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          states_estim_dx                 :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          states_estim_dy                 :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          states_estim_dz                 :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          states_estim_p                  :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          states_estim_q                  :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          states_estim_r                  :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          motors_refout                   :   OUT   vector_of_std_logic_vector32(0 TO 3);  -- single [4]
          pose_refout                     :   OUT   vector_of_std_logic_vector32(0 TO 7)  -- single [8]
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Flight_Controller
    USE ENTITY work.Flight_Controller(rtl);

  -- Signals
  SIGNAL Flight_Controller_out1           : vector_of_std_logic_vector32(0 TO 3);  -- ufix32 [4]
  SIGNAL Flight_Controller_out2           : vector_of_std_logic_vector32(0 TO 7);  -- ufix32 [8]

BEGIN
  -- Flight Controller
  -- 
  -- Copyright 2013-2018 The MathWorks, Inc.

  u_Flight_Controller : Flight_Controller
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              ReferenceValueServerBus_Inport_1_controlModePosVSOrient => ReferenceValueServerBus_controlModePosVSOrient,
              ReferenceValueServerBus_Inport_1_pos_ref => ReferenceValueServerBus_pos_ref,  -- single [3]
              ReferenceValueServerBus_Inport_1_takeoff_flag => ReferenceValueServerBus_takeoff_flag,
              ReferenceValueServerBus_Inport_1_orient_ref => ReferenceValueServerBus_orient_ref,  -- single [3]
              ReferenceValueServerBus_Inport_1_live_time_ticks => ReferenceValueServerBus_live_time_ticks,  -- uint32
              states_estim_X => states_estim_X,  -- single
              states_estim_Y => states_estim_Y,  -- single
              states_estim_Z => states_estim_Z,  -- single
              states_estim_yaw => states_estim_yaw,  -- single
              states_estim_pitch => states_estim_pitch,  -- single
              states_estim_roll => states_estim_roll,  -- single
              states_estim_dx => states_estim_dx,  -- single
              states_estim_dy => states_estim_dy,  -- single
              states_estim_dz => states_estim_dz,  -- single
              states_estim_p => states_estim_p,  -- single
              states_estim_q => states_estim_q,  -- single
              states_estim_r => states_estim_r,  -- single
              motors_refout => Flight_Controller_out1,  -- single [4]
              pose_refout => Flight_Controller_out2  -- single [8]
              );

  ce_out <= clk_enable;

  motors_refout <= Flight_Controller_out1;

  pose_refout <= Flight_Controller_out2;

END rtl;

